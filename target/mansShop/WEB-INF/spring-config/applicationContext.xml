<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://mybatis.org/schema/mybatis-spring
                           http://mybatis.org/schema/mybatis-spring-1.2.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-4.3.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx-2.0.xsd">

    <context:property-placeholder location="classpath:config/jdbc.properties, classpath:config/redis.properties"/>

    <bean id="dataSourceOracle" class="org.apache.commons.dbcp.BasicDataSource"
          p:driverClassName="${jdbc.oracle.driverClassName}"
          p:url="${jdbc.oracle.url}"
          p:username="${jdbc.oracle.userName}"
          p:password="${jdbc.oracle.password}"/>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSourceOracle"/>
    </bean>

    <bean id="redisConnectionFactory" class="org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory"
          p:hostName="${redis.host}" p:port="${redis.port}"/>

    <bean id="redisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"/>

    <bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="redisConnectionFactory"/>
        <property name="keySerializer" ref="redisSerializer"/>
        <property name="valueSerializer" ref="redisSerializer"/>
    </bean>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="redisConnectionFactory"/>
        <property name="keySerializer" ref="redisSerializer"/>
        <property name="valueSerializer" ref="redisSerializer"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="gmailMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="smtp.gmail.com"/>
        <property name="port" value="587"/>
        <property name="username" value=""/>
        <property name="password" value=""/>
        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.timeout">50000</prop>
                <prop key="mail.debug">true</prop>
            </props>
        </property>
    </bean>


    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSourceOracle" />
        <property name="mapperLocations" value="classpath:mapper/*Mapper.xml"/>
        <property name="configLocation"
                  value="classpath:/config/mybatis-config.xml" />
    </bean>

    <bean id="sqlSession"
          class="org.mybatis.spring.SqlSessionTemplate"
          destroy-method="clearCache">
        <constructor-arg name="sqlSessionFactory"
                         ref="sqlSessionFactory" />
    </bean>


    <mybatis-spring:scan base-package="org.shop.mapper"/>

    <context:component-scan base-package="org.shop"/>

</beans>