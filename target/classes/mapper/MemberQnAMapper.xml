<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.shop.mapper.MemberQnAMapper">

    <select id="findDetailByIdAndUserId" resultType="MyPageMemberQnADetailDTO">
        SELECT q.id as qnaId
            , c.qnaClassificationName
            , q.memberQnATitle as title
            , CASE
                  WHEN m.nickname is null
                      THEN m.userId
                  ELSE m.nickname
            END as writer
            , q.memberQnAContent as content
            , q.updatedAt as updatedAt
            , q.status as status
        FROM memberQnA q
        INNER JOIN qnaClassification c
            ON q.qnaClassificationId = c.id
        INNER JOIN member m
            ON q.userId = m.userId
        WHERE q.id = #{qnaId} AND q.userId = #{userId}
    </select>

    <select id="findById" resultType="MemberQnA">
        SELECT *
        FROM memberQnA
        WHERE id = #{id}
    </select>

    <update id="patchStatus">
        UPDATE memberQnA
        SET status = 0
        WHERE id = #{id}
    </update>

    <insert id="saveEntity" parameterType="MemberQnA">
        INSERT INTO memberQnA(
              memberQnATitle
              , memberQnAContent
              , qnaClassificationId
              , userId
        )
        VALUES (
               #{memberQnATitle}
               , #{memberQnAContent}
               , #{qnaClassificationId}
               , #{userId}
               )
    <selectKey keyProperty="id" resultType="Long" order="AFTER">
        SELECT MAX(id) FROM memberQnA WHERE userId = #{userId}
    </selectKey>
    </insert>

    <update id="patchQnA">
        UPDATE memberQnA
        SET memberQnATitle = #{dto.title}
            , memberQnAContent = #{dto.content}
            , qnaClassificationId = #{dto.classificationId}
        WHERE id = #{id}
    </update>

    <delete id="deleteById">
        DELETE FROM memberQnA
        WHERE id = #{id}
    </delete>

    <select id="findAllByAdminQnAList" resultType="AdminQnAListResponseDTO">
        SELECT q.id as qnaId
        , c.qnaClassificationName as classification
        , q.memberQnATitle as title
        , CASE
              WHEN m.nickname is null
                  THEN m.userId
              ELSE m.nickname
        END as writer
        , q.updatedAt as createdAt
        , q.status as status
        FROM memberQnA q
        INNER JOIN qnaClassification c
            ON q.qnaClassificationId = c.id
        INNER JOIN member m
            ON q.userId = m.userId
        <include refid="searchAdminQnACondition"/>
        ORDER BY q.updatedAt DESC
        OFFSET #{cri.offset} ROWS FETCH NEXT #{cri.amount} ROWS ONLY
    </select>

    <select id="countByAdminQnAList" resultType="int">
        SELECT distinct(count(q.id))
        FROM memberQnA q
        INNER JOIN member m
            ON q.userId = m.userId
        <include refid="searchAdminQnACondition"/>
    </select>

    <sql id="searchAdminQnACondition">
        <trim prefix="WHERE ">
            <if test="type == 'new'">
                q.status = 0
                <if test="cri.keyword != null">
                    AND (q.userId LIKE '%' || #{cri.keyword} || '%'
                    OR m.nickname LIKE '%' || #{cri.keyword} || '%')
                </if>
            </if>
            <if test="type == 'all'">
                <if test="cri.keyword != null">
                    q.userId LIKE '%' || #{cri.keyword} || '%'
                        OR m.nickname LIKE '%' || #{cri.keyword} || '%'
                </if>
            </if>
        </trim>
    </sql>

    <select id="findDetailById" resultType="MyPageMemberQnADetailDTO">
        SELECT q.id as qnaId
             , c.qnaClassificationName
             , q.memberQnATitle as title
             , CASE
                   WHEN m.nickname is null
                       THEN m.userId
                   ELSE m.nickname
            END as writer
             , q.memberQnAContent as content
             , q.updatedAt as updatedAt
             , q.status as status
        FROM memberQnA q
                 INNER JOIN qnaClassification c
                            ON q.qnaClassificationId = c.id
                 INNER JOIN member m
                            ON q.userId = m.userId
        WHERE q.id = #{qnaId}
    </select>

    <update id="patchStatusToTrue">
        UPDATE memberQnA
        SET status = 1
        WHERE id = #{id}
    </update>

</mapper>