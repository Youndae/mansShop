<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.shop.mapper.AdminMapper">

    <sql id="search">
        <trim prefix="WHERE " prefixOverrides="AND">
            <if test="keyword != null">pName LIKE '%'||#{keyword}||'%'</if>
            <if test="classification != null">AND pClassification=#{classification}</if>
        </trim>
    </sql>


    <select id="productList" resultType="org.shop.domain.dto.admin.ProductListDTO">
        SELECT *
        FROM(
            SELECT rownum rn
                , pno
                , pClassification
                , pName
                , pPrice
                , pRegDate
                , pOpNo
                , pSize
                , pColor
                , pStock
            FROM product_view

        <include refid="search"></include>

        )
        WHERE rn
            BETWEEN (#{pageNum} - 1) * #{amount} + 1 AND #{pageNum} * #{amount}
    </select>

    <select id="getProductTotal" resultType="int">
        SELECT count(*)
        FROM product_view
        <include refid="search"></include>
    </select>


    <insert id="addProduct" parameterType="org.shop.domain.entity.Product">
        INSERT INTO product(
                pno
                , pClassification
                , pName
                , pPrice
                , pRegDate
                , firstThumbnail
                )
            VALUES(
                #{pno}
                , #{pClassification}
                , #{pName}
                , #{pPrice}
                , sysdate
                , #{firstThumbnail}
            )
    </insert>

    <insert id="addProductOp" parameterType="org.shop.domain.entity.ProductOp">
        INSERT INTO productOp(
            pOpNo
            , pno
            , pSize
            , pColor
            , pStock
        )
        VALUES(
            #{pOpNo}
            , #{pno}
            , #{pSize}
            , #{pColor}
            , #{pStock}
        )
    </insert>

    <insert id="addProductThumbnail" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL">
            INTO productThumbnail (
                thumbNo
                , pno
                , pThumbnail
            )
            VALUES(
                #{item.thumbNo}
                , #{item.pno}
                , #{item.pThumbnail}
            )
        </foreach>
    </insert>

    <insert id="addProductInfo" parameterType="org.shop.domain.entity.ProductImg">
        <foreach collection="list" item="item" index="index" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL">
            INTO productImg(
                pImgNo
                , pno
                , pImg
                , pImgStep
            )
            VALUES(
                productImg_seq.NEXTVAL
                , #{item.pno}
                , #{item.pImg}
                , #{item.pImgStep}
            )
        </foreach>
    </insert>

    <select id="productInfo" resultType="org.shop.domain.dto.admin.ProductInfoDTO">
        SELECT
            p.pno
            , p.pClassification
            , p.pName
            , p.pPrice
            , p.firstThumbnail
            , p.pClosed
            , op.pOpNo
            , op.pSize
            , op.pColor
            , op.pStock
            , op.opClosed
        FROM productOp op
            INNER JOIN product p
            ON p.pno = op.pno
        WHERE
            op.pOpNo = #{pOpNo}
    </select>

    <select id="getFirstThumb" resultType="org.shop.domain.dto.admin.ProductImageDTO">
        SELECT firstThumbnail
        FROM product
        WHERE pno=#{pno}
    </select>

    <select id="getThumbnail" resultType="org.shop.domain.dto.admin.ProductImageDTO">
        SELECT pThumbnail
        FROM productThumbnail
        where pno=#{pno}
    </select>

    <select id="getInfoImg" resultType="org.shop.domain.dto.admin.ProductImageDTO">
        SELECT pImg
        FROM productImg
        WHERE pno=#{pno}
    </select>


    <update id="modifyProduct" parameterType="org.shop.domain.entity.Product">
        UPDATE product
            <set>
                pClassification = #{pClassification}
                , pName = #{pName}
                , pPrice = #{pPrice}
                <if test="firstThumbnail != null">, firstThumbnail=#{firstThumbnail}</if>
            </set>
        WHERE pno=#{pno}
    </update>

    <update id="modifyProductOp" parameterType="org.shop.domain.entity.ProductOp">
        UPDATE productOp SET
            pSize=#{pSize}
            , pColor=#{pColor}
            , pStock=#{pStock}
        WHERE pOpNo=#{pOpNo}
    </update>

    <delete id="deleteThumb" parameterType="String">
        DELETE FROM productThumbnail
           <where>
               <foreach collection="list" item="item" open="" close="" separator="OR">
                   (pThumbnail=#{item})
               </foreach>
           </where>
    </delete>

    <delete id="deleteInfoImg" parameterType="String">
        DELETE FROM productImg
            <where>
                <foreach collection="list" item="item" open="" close="" separator="OR">
                    (pImg=#{item})
                </foreach>
            </where>
    </delete>

    <select id="maxStep" resultType="int">
        SELECT max(pImgStep) FROM
            productImg
        WHERE pno=#{pno}
    </select>

    <update id="closedProductOp" parameterType="String">
        UPDATE productOp SET
            opClosed=1
        WHERE pOpNo=#{pOpNo}
    </update>

    <update id="openProductOp" parameterType="String">
        UPDATE productOp SET
            opClosed=0
        WHERE pOpNo=#{pOpNo}
    </update>

    <update id="closedProduct" parameterType="String">
        UPDATE product SET
            pClosed=1
        WHERE pno=#{pno}
    </update>

    <update id="openProduct" parameterType="String">
        UPDATE product SET
            pClosed=0
        WHERE pno=#{pno}
    </update>

    <sql id="orderSearch">
        <trim prefix="WHERE ">
            <if test="keyword != null">userId LIKE '%'||#{keyword}||'%'</if>
        </trim>
    </sql>

    <select id="orderList" resultType="org.shop.domain.entity.ProductOrder">
        SELECT *
        FROM(
            SELECT rownum rn
                , o.*
            FROM(
                SELECT *
                FROM productOrder

                <include refid="orderSearch"></include>

                ORDER BY orderDate DESC
            ) o
        )
        WHERE rn
            BETWEEN (#{pageNum} - 1) * #{amount} + 1 AND #{pageNum} * #{amount}
    </select>

    <select id="getOrderTotal" resultType="int">
        SELECT count(*)
        FROM productOrder
        <include refid="orderSearch"></include>
    </select>

    <select id="orderInfo" resultType="org.shop.domain.dto.admin.AdminProductOrderDTO">
        select orderNo
            , recipient
            , userId
            , orderPhone
            , addr
            , orderMemo
            , orderStat
        FROM productOrder
        WHERE orderNo=#{orderNo}
    </select>

    <select id="orderInfoTable" resultType="org.shop.domain.dto.admin.AdminOrderInfoTableDTO">
        SELECT p.pClassification
            , p.pName
            , p.pSize
            , p.pColor
            , p.pPrice
            , pod.pOpNo
            , pod.orderNo
            , pod.orderCount
        FROM productOrderDetail pod
            INNER JOIN product_view p
            ON pod.pOpNo = p.pOpNo
        WHERE orderNo=#{orderNo}
    </select>

    <update id="shippingProcessing">
        UPDATE productOrder SET
            orderStat=1
        WHERE
            orderNo=#{orderNo}
    </update>

    <select id="checkOrderStat" resultType="int">
        SELECT orderStat
        FROM productOrder
        WHERE
            orderNo=#{orderNo}
    </select>

    <select id="getAdminQnATotal" resultType="int">
        SELECT count(*)
        FROM myQnA
    </select>

    <select id="adminQnAList" resultType="org.shop.domain.entity.MyQnA">
        SELECT *
        FROM (
            SELECT rownum rn
                , qno
                , userId
                , qTitle
                , qContent
                , qStat
                , qRegDate
            FROM myQnA
            ORDER BY qno DESC
            )
        WHERE rn
            BETWEEN (#{pageNum} - 1) * #{amount} + 1 AND #{pageNum} * #{amount}
    </select>

    <select id="adminQnADetail" resultType="org.shop.domain.entity.MyQnA">
        SELECT *
        FROM myQnA
        WHERE qno=#{qno}
    </select>

    <select id="adminQnAReplyList" resultType="org.shop.domain.dto.admin.MyQnAReplyGetDTO">
        SELECT *
        FROM myQnAReply
        WHERE qno=#{qno}
        ORDER BY replyNo DESC
    </select>

    <update id="adminQnAComplete">
        UPDATE myQnA SET
            qStat=1
        WHERE qno=#{qno}
    </update>

    <select id="adminQnACheck" resultType="int">
        SELECT qStat
        FROM myQnA
        WHERE qno=#{qno}
    </select>

    <insert id="adminQnAReply" parameterType="org.shop.domain.entity.MyQnAReply">
        INSERT INTO myQnAReply(
            replyNo
            , qno
            , userId
            , qrContent
            , qrRegDate
            )
        VALUES(
            my_QnA_Reply_SEQ.NEXTVAL
            , #{qno}
            , #{userId}
            , #{qrContent}
            , sysdate
        )
    </insert>

    <delete id="qnAReplyDelete">
        DELETE FROM myQnaReply
        WHERE replyNo=#{replyNo}
    </delete>

    <select id="userList" resultType="org.shop.domain.dto.admin.MemberListDTO">
        SELECT *
        FROM(
            SELECT rownum rn
                , m.*
            FROM(
                SELECT userId
                        , userName
                        , joinRegDate
                FROM member
                <include refid="orderSearch"></include>
                ORDER BY joinRegdate desc
                )m
            )
        WHERE rn
            BETWEEN (#{pageNum} - 1) * #{amount} + 1 AND #{pageNum} * #{amount}
    </select>

    <select id="getUserTotal" resultType="int">
        SELECT count(*)
        FROM member
        <include refid="orderSearch"></include>
    </select>

    <select id="userInfo" resultType="org.shop.domain.dto.admin.MemberInfoDTO">
        SELECT userId
                , userName
                , userEmail
                , joinRegDate
                , userBirth
                , userPhone
        FROM member
        WHERE userId=#{userId}
    </select>

    <sql id="salesSearchProduct">
        <trim  prefix="WHERE ">
            <if test="type == 'classification'.toString()">pClassification LIKE '%'||#{keyword}||'%'</if>
            <if test="type == 'pName'.toString()">pName LIKE '%'||#{keyword}||'%'</if>
        </trim>
    </sql>

    <sql id="salesSortProduct">
        <trim prefix="ORDER BY ">
            <if test="sortType == '1'.toString()">opSalesRate ASC</if>
            <if test="sortType == '2'.toString()">opSalesRate DESC</if>
            <if test="sortType == '3'.toString()">opSales ASC</if>
            <if test="sortType == '4'.toString()">opSales DESC</if>
        </trim>
    </sql>


    <select id="getSalesProductTotal" resultType="int">
        SELECT count(*)
        FROM product_view
        <include refid="salesSearchProduct"></include>
    </select>

    <select id="salesProductList" resultType="org.shop.domain.dto.admin.SalesProductListDTO">
        SELECT *
        FROM(
            SELECT rownum rn
                , v.*
            FROM(
                SELECT pClassification
                        , pName
                        , pSize
                        , pColor
                        , pPrice
                        , opSalesRate
                        , opSales
                FROM product_view

                <include refid="salesSortProduct"></include>

                ) v

            <include refid="salesSearchProduct"></include>

            )
        WHERE rn
            BETWEEN (#{pageNum} - 1) * #{amount} + 1 AND #{pageNum} * #{amount}
    </select>

    <sql id="salesSearchTerm">
        <trim  prefix="WHERE ">
            <if test="keyword != null">salesTerm LIKE '%'||#{keyword}||'%'</if>
        </trim>
    </sql>

    <select id="salesTermSelect" resultType="org.shop.domain.entity.Sales">
        SELECT salesTerm
        FROM sales
        ORDER BY salesTerm DESC
    </select>

    <select id="getSalesTermTotal" resultType="int">
        SELECT count(*)
        FROM sales

        <include refid="salesSearchTerm"></include>
    </select>

    <select id="salesTermList" resultType="org.shop.domain.entity.Sales">
        SELECT *
        FROM(
            SELECT rownum rn
                , s.*
            FROM(
                SELECT *
                FROM sales
                ORDER BY salesterm DESC
            ) s

        <include refid="salesSearchTerm"></include>

        )
        WHERE rn
            BETWEEN (#{pageNum} - 1) * #{amount} + 1 AND #{pageNum} * #{amount}
    </select>

    <select id="productQnAList" resultType="org.shop.domain.dto.admin.ProductQnAListDTO">
        SELECT *
        FROM(
            SELECT rownum rn
                , q.*
            FROM(
                SELECT pq.pQnANo
                     , pQnAAnswer
                     , pQnARegDate
                     , pQnAIndent
                     , userId
                     , p.pName
                FROM productQna pq
                    INNER JOIN product p
                    ON pq.pno = p.pno
                ORDER BY pQnAGroupNo desc
                    , pQnAIndent ASC
            )q
        )
        WHERE rn
            BETWEEN (#{pageNum} - 1) * #{amount} + 1 AND #{pageNum} * #{amount}
    </select>

    <select id="getProductQnATotal" resultType="int">
        SELECT count(*)
        FROM productQna
    </select>

    <select id="productQnADetail" resultType="org.shop.domain.dto.admin.ProductQnADetailDTO">
        SELECT q.userId
             , q.pQnAContent
             , q.pQnANo
             , q.pno
             , p.pName
        FROM productQna q
            INNER JOIN product p
            ON q.pno = p.pno
        WHERE q.pQnANo = #{pQnANo}
    </select>

    <insert id="productQnAReply" parameterType="org.shop.domain.entity.ProductQnA">
        INSERT INTO productQna(
            pQnANo
            , pno
            , userId
            , pQnAContent
            , pQnARegDate
            , pQnAGroupNo
            , pQnAIndent
        )
        VALUES(
            product_QnA_SEQ.NEXTVAL
            , #{pno}
            , #{userId}
            , #{pQnAContent}
            , sysdate
            , #{pQnANo}
            , 1
        )
    </insert>

    <update id="productQnAComplete">
        UPDATE productQnA
        SET pQnAAnswer = 1
        WHERE pQnANo = #{pQnANo}
    </update>

</mapper>