<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.shop.mapper.MainMapper">

    <sql id="bestAndNew">
        <trim prefix="">
            <if test="type.equals('BEST')">, p.productSales ORDER BY p.productSales DESC</if>
            <if test="type.equals('NEW')">, p.createdAt ORDER BY p.createdAt DESC</if>
        </trim>
    </sql>

    <select id="findMainBestAndNew" resultType="MainListDTO">
        SELECT p.id as productId
                , p.productName
                , p.thumbnail
                , p.productPrice as price
                , p.productDiscount as discount
                , sum(op.stock) as stock
        FROM product p
        inner join productOption op
        on p.id = op.productId
        GROUP BY p.id
               , p.productName
               , p.thumbnail
               , p.productPrice
               , p.productDiscount
        <include refid="bestAndNew"/>
        OFFSET 0 ROWS FETCH NEXT 12 ROWS ONLY
    </select>

    <select id="findClassificationList" resultType="MainListDTO">
        SELECT p.id as productId
            , p.productName
            , p.thumbnail
            , p.productPrice as price
            , p.productDiscount as discount
            , sum(op.stock) as stock
        FROM product p
        inner join productOption op
        on p.id = op.productId
        where p.CLASSIFICATIONID = #{cri.classification}
        GROUP BY p.id
            , p.productName
            , p.thumbnail
            , p.productPrice
            , p.productDiscount
            , p.createdAt
        ORDER BY p.createdAt DESC
        OFFSET #{cri.offset} ROWS FETCH NEXT #{cri.amount} ROWS ONLY
    </select>

    <select id="findClassificationElementsCount" resultType="int">
        SELECT distinct(count(id))
        FROM product
        WHERE classificationId = #{cri.classification}
    </select>

    <select id="findSearchProduct" resultType="MainListDTO">
         SELECT p.id as productId
              , p.productName
              , p.thumbnail
              , p.productPrice as price
              , p.productDiscount as discount
              , sum(op.stock) as stock
         FROM product p
         inner join productOption op
         on p.id = op.productId
         where p.productName LIKE '%'||#{cri.keyword}||'%'
         GROUP BY p.id
                , p.productName
                , p.thumbnail
                , p.productPrice
                , p.productDiscount
                , p.createdAt
         ORDER BY p.createdAt DESC
         OFFSET #{cri.offset} ROWS FETCH NEXT #{cri.amount} ROWS ONLY
    </select>

    <select id="findSearchProductCount" resultType="int">
        SELECT distinct(count(id))
        FROM product
        WHERE productName LIKE '%'||#{cri.keyword}||'%'
    </select>

</mapper>